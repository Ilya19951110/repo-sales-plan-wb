import pandas as pd
from datetime import datetime
from gspread_dataframe import set_with_dataframe
from scripts.gspread_client import get_gspread_client


def get_api_in_master_table(sheet_main='MASTERTABLE_–ü–ª–∞–Ω –ø—Ä–æ–¥–∞–∂', wsheet_name='–°–ø–∏—Å–æ–∫ —Ç–∞–±–ª–∏—Ü') -> dict[str, str]:
    cabinets = {}
    try:
        # –ü–æ–¥–∫–ª—é—á–∞–µ–º—Å—è –∫ —Ç–∞–±–ª–∏—Ü–µ MASTERTABLE_–ü–ª–∞–Ω –ø—Ä–æ–¥–∞–∂ –∫ –ª–∏—Å—Ç—É –°–ø–∏—Å–∫ —Ç–∞–±–ª–∏—Ü
        print('üîê –ü–æ–¥–∫–ª—é—á–∞—é—Å—å –∫ gspread...')
        gs = get_gspread_client()

    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ gspread:\n{e}")
        return cabinets
    try:
        print('üìÑ –û—Ç–∫—Ä—ã–≤–∞—é —Ç–∞–±–ª–∏—Ü—É: MASTERTABLE_–ü–ª–∞–Ω –ø—Ä–æ–¥–∞–∂')

        master_sheet_name = gs.open(sheet_main)
        master_worksheet = master_sheet_name.worksheet(wsheet_name)
        result = master_worksheet.get_all_values()

        # –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ, –∏–º—è —Ç–∞–±–ª–∏—Ü –¥–ª—è –¥–∞–ª—å–Ω–µ–π—à–µ–≥–æ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –ø–æ –∫–∞–±–∏–Ω–µ—Ç–∞–º
        table_names = [row[1] for row in result[1:]]

        print(f"üìã –ù–∞–π–¥–µ–Ω–æ {len(table_names)} —Ç–∞–±–ª–∏—Ü")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Å–ø–∏—Å–∫–∞ —Ç–∞–±–ª–∏—Ü:\n{e}")
        return cabinets

    # –ø—Ä–æ—Ö–æ–¥–∏–º —Ü–∏–∫–ª–æ–º –ø–æ table_names, –∫–æ—Ç–æ—Ä—ã–π —Å–æ–¥–µ—Ä–∂–∏—Ç –∏–º–µ–Ω–∞ —Ç–∞–±–ª–∏—Ü –¥–ª—è –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è
    for table_name in table_names:
        print(f"\nüîÑ –û–±—Ä–∞–±–∞—Ç—ã–≤–∞—é: {table_name}")
        try:

            spreadsheet = gs.open(table_name)
            title_sheet = spreadsheet.worksheet('–ó–∞–≥–ª–∞–≤–Ω—ã–π')

            # –ü–æ–¥–∫–ª—é—á–∞–µ–º—Å—è –∫ —è—á–µ–π–∫–µ B10 –∫–æ—Ç–æ—Ä–∞—è —Å–æ–¥–µ—Ä–∂–∏—Ç –¥–∞—Ç—É –Ω–∞—á–∞–ª–∞ –æ—Ç—á–µ—Ç–Ω–æ–≥–æ –ø–µ—Ä–∏–æ–¥–∞
            print('–ü–æ–ª—É—á–∞—é –¥–∞—Ç—É')
            start_period = title_sheet.acell('B10').value.strip()

            if not start_period:
                raise ValueError(f"B10 –ø—É—Å—Ç–∞—è –≤ —Ç–∞–±–ª–∏—Ü–µ {table_name}")

            # —Ñ–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º –¥–∞—Ç—É, —Ç–∞–∫ –∫–∞–∫ –¥–∞—Ç–∞ –ø—Ä–∏—Ö–æ–¥–∏—Ç –≤ —Ñ–æ—Ä–º–∞—Ç–µ –¥.–º.–≥–≥–≥
            print('–§–æ—Ä–º–∞—Ç–∏—Ä—É—é –¥–∞—Ç—É!')
            formatted_date = start_period.replace('.', '-')

            # –∫–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É–µ–º –¥–∞—Ç—É –∏–∑ —Ñ–æ—Ä–º–∞—Ç–∞ –¥-–º-–≥–≥–≥–≥ –≤ –≥–≥–≥–≥-–º-–¥
            convert_date = datetime.strptime(
                formatted_date, "%d-%m-%Y").strftime("%Y-%m-%d")

            # –ø–æ–¥–∫–ª—é—á–∞–µ–º—Å—è –∫ —è—á–µ–π–∫–µ B19 - —Ç–∞–º –Ω–∞—Ö–æ–¥–∏—Ç—Å—è api_key
            api_key = title_sheet.acell('B9').value
            if not api_key:
                raise ValueError("–ü—É—Å—Ç–∞—è —è—á–µ–π–∫–∞ B9")

            # —É–¥–∞–ª—è–µ–º –Ω–µ–Ω—É–∂–Ω—ã–µ —Å–∏–º–≤–æ–ª—ã, –µ—Å–ª–∏ –æ–Ω–∏ –µ—Å—Ç—å
            api_key = api_key.strip().replace(
                '\n', '').replace('\r', '').replace(' ', '')

            cabinets[table_name] = (api_key, convert_date)
            print(f"‚úÖ –ö–∞–±–∏–Ω–µ—Ç –¥–æ–±–∞–≤–ª–µ–Ω: {table_name} ({convert_date})")

        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ {table_name}:\n{e}")
            continue
    print("\nüßæ –°–ª–æ–≤–∞—Ä—å —Å—Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω.")
    return cabinets


def save_in_gsh(cabinet: dict[str, pd.DataFrame], sheet_name=None) -> None:

    gs = get_gspread_client()

    for name_table, df in cabinet.items():
        spreadsheet = gs.open(name_table)

        # –æ—Å—Ç–∞—Ç–∫–∏
        if sheet_name in ['–û—Å—Ç–∞—Ç–∫–∏ (api)']:
            worksheet = spreadsheet.worksheet(sheet_name)
            worksheet.clear()

            set_with_dataframe(worksheet, df, row=1, col=1)
            print(
                f"‚úÖ –î–∞–Ω–Ω—ã–µ —É—Å–ø–µ—à–Ω–æ –∑–∞–≥—Ä—É–∂–µ–Ω—ã –≤ '{sheet_name}'!\n–ö–∞–±–∏–Ω–µ—Ç {name_table}")
            continue

        # –í–æ—Ä–æ–Ω–∫–∞ –ø—Ä–æ–¥–∞–∂ sales
        if sheet_name in ['–ê–Ω–∞–ª–∏—Ç–∏–∫–∞ (api)']:
            worksheet = spreadsheet.worksheet(sheet_name)

            start_row = len(worksheet.get_all_values()) + 1

            set_with_dataframe(
                worksheet,
                df,
                row=start_row,
                col=1,
                include_column_header=False,
                resize=False
            )

            print(
                f"‚úÖ –î–∞–Ω–Ω—ã–µ —É—Å–ø–µ—à–Ω–æ –∑–∞–≥—Ä—É–∂–µ–Ω—ã –≤ '{sheet_name}'!\n–ö–∞–±–∏–Ω–µ—Ç {name_table}")
            continue

        # –†–µ–∫–ª–∞–º–Ω–∞—è –∫–∞–º–ø–∞–Ω–∏—è advert
        if sheet_name in ['–†–ö(api)']:
            worksheet = spreadsheet.worksheet(sheet_name)

            existing_rows = len(worksheet.get_all_values())

            start_row = existing_rows + 1 if existing_rows > 0 else 1

            set_with_dataframe(
                worksheet,
                df,
                row=start_row,
                col=2,
                include_column_header=False,
                resize=False
            )
            print(
                f"‚úÖ –î–∞–Ω–Ω—ã–µ —É—Å–ø–µ—à–Ω–æ –∑–∞–≥—Ä—É–∂–µ–Ω—ã –≤ '{sheet_name}'!\n–ö–∞–±–∏–Ω–µ—Ç {name_table}")
            continue

        print(f"‚ö†Ô∏è –ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ–µ –∏–º—è –ª–∏—Å—Ç–∞: '{sheet_name}'")

    print("üèÅ –í—Å–µ —Ç–∞–±–ª–∏—Ü—ã –æ–±—Ä–∞–±–æ—Ç–∞–Ω—ã.")
